type User {
  id: ID!
  firstname: String
  lastname: String
  username: String
  salt: String
  password: String
}


extend type Query {
  users: [User!]
  currentUser: User
  user(id: ID!): User
 
}

input SignupInput {
  firstname: String!
  lastname: String!
  username: String!
  password: String!
}
input SigninInput {
  username: String!
  password: String!
}

type AuthenticationResult {
  user: User
  jwt: String
  authError: String
}



extend type Mutation {
  createUser(
    firstname: String
    lastname: String
    username: String
    salt: String
    password: String
  ): User
  signUp(data: SignupInput!): AuthenticationResult
  signIn(data: SigninInput!): AuthenticationResult
}
